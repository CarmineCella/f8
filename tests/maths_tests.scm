;; {tests for maths function}
;;
;; (c) 2019 www.arch-programming.org
;;

(load "maths.scm")

(prn "--- basic operations ---" (nl))
(test {succ 1}{2})
(test {succ -1}{0})
(test {pred  3}{2})
(test {pred -1}{-2})
(test {quotient 21 5}{4})
(test {quotient 12 3}{4})
(test {mod 6 12}{6})
(test {mod 12 12}{0})
(test {mod -8 12}{4})
(test {twice 3}{6})
(test {square 3}{9})
(test {square -4}{16})
(test {mul-neg {2 8}} {-16})
(test {round 0.3}{0})
(test {round 0.7}{1})
(test {round -0.3}{0})
(test {round -0.7}{-1})

(prn (nl) "--- special sequences ---" (nl))
(test {fac 5} {120})
(test {fac 6} {720})
(test {fib 10} {55})

(def {seq} (linspace 0 10 1))
(test {map fib seq}{1 1 1 2 3 5 8 13 21 34})
(test {ack 2 2}{7})
(test {ack 2 3}{9})
(test {ack 3 3}{61})
(def {a} (randn 20))
(def {b} (randn 40))
(test {== a b}{0}) ; this test can eventually fail

(prn (nl) "--- sequence generators ---" (nl))
(test {linspace 0 10 1}{0 1 2 3 4 5 6 7 8 9})
(test {zeros 10}{0 0 0 0 0 0 0 0 0 0})
(test {ones 10}{1 1 1 1 1 1 1 1 1 1})

(prn (nl) "--- other operators ---" (nl))

(test {diff seq}{1 1 1 1 1 1 1 1 1})
(test {sign seq}{1 1 1 1 1 1 1 1 1 1})
(def {seq2} (map - seq))
(test {diff seq2}{-1 -1 -1 -1 -1 -1 -1 -1 -1})
(test {sign seq2}{1 -1 -1 -1 -1 -1 -1 -1 -1 -1})
(test {sum seq}{45})
(test {sum seq2}{-45})
(test {prod seq}{0})
(test {mean seq}{4.5})
(test {mean seq2}{-4.5})
(test {stddev seq}{3.0276503540974917})
(test {stddev seq2}{3.0276503540974917})
(def {e0}{0 1})
(def {e1}{1 0})

(test {dot e0 e1}{0})
(def {sumlin} (sum (linspace 0 100 1)))
(def {dotlin} (dot (linspace 0 100 1) (ones 100)))
(test {== dotlin sumlin} {1})
(test {ortho e0 e1}{1})
(test {standard seq}{-1.4863010829205867 -1.1560119533826787 -0.82572282384477047 -0.49543369430686224 -0.16514456476895409 0.16514456476895409 0.49543369430686224 0.82572282384477047 1.1560119533826787 1.4863010829205867})
(test {standard seq2}{1.4863010829205867 1.1560119533826787 0.82572282384477047 0.49543369430686224 0.16514456476895409 -0.16514456476895409 -0.49543369430686224 -0.82572282384477047 -1.1560119533826787 -1.4863010829205867})
(test {min seq}{0})
(test {max seq}{9})
(test {min seq2}{-9})
(test {max seq2}{0})
(test {normal seq}{0 0.1111111111111111 0.22222222222222221 0.33333333333333331 0.44444444444444442 0.55555555555555558 0.66666666666666663 0.77777777777777779 0.88888888888888884 1})

(prn (nl) "--- dotted operators ---" (nl))
(test {.+ seq}{45})
(test {.+ seq2}{-45})
(test {.* seq}{0})
(test {./ seq}{0})
(test {.* seq2}{0})
(test {./ seq2}{0})
(test {.- seq}{-45})
(test {.- seq2}{45})
(test {.< seq}{1})
(test {.> seq}{0})
(test {.<= seq}{1})
(test {.>= seq}{0})
(test {.< seq2}{0})
(test {.> seq2}{1})
(test {.<= seq2}{0})
(test {.>= seq2}{1})
(test {.sin seq}{0 0.8414709848078965 0.90929742682568171 0.14112000805986721 -0.7568024953079282 -0.95892427466313845 -0.27941549819892586 0.65698659871878906 0.98935824662338179 0.41211848524175659})
(test {.cos seq}{1 0.54030230586813977 -0.41614683654714241 -0.98999249660044542 -0.65364362086361194 0.2836621854632263 0.96017028665036608 0.7539022543433046 -0.14550003380861354 -0.91113026188467694})
(test {.sqrt seq}{0 1 1.4142135623730951 1.7320508075688772 2 2.2360679774997898 2.4494897427831779 2.6457513110645907 2.8284271247461903 3})
(test {.log (tail seq)}{0 0.69314718055994529 1.0986122886681098 1.3862943611198906 1.6094379124341003 1.791759469228055 1.9459101490553132 2.0794415416798357 2.1972245773362196})
(test {.abs seq2}{0 1 2 3 4 5 6 7 8 9})
(test {.exp seq}{1 2.7182818284590451 7.3890560989306504 20.085536923187668 54.598150033144236 148.4131591025766 403.42879349273511 1096.6331584284585 2980.9579870417283 8103.0839275753842})
(test {.exp seq2}{1 0.36787944117144233 0.1353352832366127 0.049787068367863944 0.018315638888734179 0.006737946999085467 0.0024787521766663585 0.00091188196555451624 0.00033546262790251185 0.00012340980408667956})
(test {.floor (.sqrt seq)}{0 1 1 1 2 2 2 2 2 3})

(prn (nl) "--- builtin operators --- " (nl))

(def {seq16} (linspace 0 16 1))
(test {.round (ifft (fft seq16))}{0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15})

(prn (nl) "ALL TESTS PASSED" (nl) (nl))

